/* --------------------------------------------------------------------------------
 #
 #  4DPlugin-activate.cpp
 #	source generated by 4D Plugin Wizard
 #	Project : activate
 #	author : miyako
 #	2020/02/14
 #  
 # --------------------------------------------------------------------------------*/

#include "4DPlugin-activate.h"

#if VERSIONWIN
namespace MDI {
    HWND windowRef = NULL;
}
#endif

#if VERSIONMAC
#include <Cocoa/Cocoa.h>
#endif

void OnStartup() {
    
#if VERSIONWIN
    PA_ulong32 version = PA_Get4DVersion();
    
    if (version >= 16)
    {
        MDI::windowRef = (HWND)PA_GetMainWindowHWND();
    }
    else
    {
        //the window class is the folder name of the application
        HWND mdi = NULL;
        wchar_t path[_MAX_PATH] = { 0 };
        wchar_t * applicationPath = wcscpy(path, (const wchar_t *)PA_GetApplicationFullPath().fString);
        //remove file name (4D.exe)
        PathRemoveFileSpec(path);
        //check instance as well, to be sure
        HINSTANCE h = (HINSTANCE)PA_Get4DHInstance();
        do {
            mdi = FindWindowEx(NULL, mdi, (LPCTSTR)path, NULL);
            if (mdi)
            {
                if (h == (HINSTANCE)GetWindowLongPtr(mdi, GWLP_HINSTANCE))
                {
                    break;
                }
            }
        } while (mdi);
        MDI::windowRef = mdi;
    }
#endif
}

void OnExit() {
    
#if VERSIONWIN
    if (MDI::windowRef)
    {
        wchar_t path[_MAX_PATH] = { 0 };
        wchar_t * applicationPath = wcscpy(path, (const wchar_t *)PA_GetApplicationFullPath().fString);
        
        SHFILEINFO fileinfo;
        if (SHGetFileInfo((LPCTSTR)applicationPath,
                          0,
                          &fileinfo,
                          sizeof(fileinfo),
                          SHGFI_LARGEICON | SHGFI_ICON))
        {
            HICON hIcon = fileinfo.hIcon;
            SendMessage(MDI::windowRef, WM_SETICON, ICON_BIG, (LPARAM)hIcon);
            /* "you are responsible for freeing it with DestroyIcon when you no longer need it" */
            /* https://docs.microsoft.com/ja-jp/windows/desktop/api/shellapi/nf-shellapi-shgetfileinfoa */
            DestroyIcon(hIcon);
        }
        
    }
#endif
}

#pragma mark -

void PluginMain(PA_long32 selector, PA_PluginParameters params) {
    
    try
    {
        switch(selector)
        {
            case kInitPlugin :
            case kServerInitPlugin :
                OnStartup();
                break;
                
            case kDeinitPlugin:
                OnExit();
                break;
                
                // --- activate
                
            case 1 :
                ACTIVATE_4D(params);
                break;
                
        }
        
    }
    catch(...)
    {
        
    }
}

#pragma mark -

#if VERSIONWIN

HWND gmdi = NULL;

void activateWindow(HWND window)
{
    ShowWindowAsync(window, SW_RESTORE);
    //ShowWindow(window, SW_RESTORE);
    SetWindowPos(window, HWND_TOP, 0, 0, 0, 0,  SWP_NOMOVE | SWP_NOSIZE);
    //SetActiveWindow(window);
    SetForegroundWindow(window);
    AllowSetForegroundWindow(ASFW_ANY);
}
#endif

void ACTIVATE_4D(PA_PluginParameters params) {
    
#if VERSIONMAC
    [[NSRunningApplication currentApplication]activateWithOptions:NSApplicationActivateIgnoringOtherApps];
#endif
    
#if VERSIONWIN
    activateWindow(MDI:windowRef);
#endif
}
